<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>
<mapper namespace="com.gudi.project.dao.AdminUserListDAO">
<!-- 이 파일은 예시 쓸려고 만든 파일임 -->
<!-- 여기엔 코드 적는거 아니에요 -->
<!-- 여기에 코드 적으면 바보 -->
<!--  한 곳에 쓰지 말고 기능별로 분리
		ex) 메인 = main_mapper.xml + mainDAO
			 프로필 = profile_mapper.xml + ProfileDAO
 -->
 <select id="cntUserList" resultType="int">
 	select count(mem_num) from member
 </select>
 <select id="cntUserNickSearchList" resultType="int">
 	select count(mem_num) from member where mem_nickname like #{param1}
 </select>
 <select id="cntUserNickAndAuthSearchList" resultType="int">
 	select count(mem_num) from member where mem_nickname like #{param1} and mem_autority = #{param2}
 </select>
 
 <select id="userList" resultType="com.gudi.project.dto.DecListDTO">
 	select mem_num, mem_email, mem_name, mem_nickname, mem_autority, mem_ban from member order by mem_num DESC limit 10 offset #{param1};
 </select>
 
 <update id="userBan">
 	update member set mem_ban = false where mem_num = #{param1}
 </update>
 <insert id="banLog">
 	insert into mem_state (pro_num, content, admin_num)values(#{param1}, "탈퇴", #{param2});
 </insert>
 
  <update id="userRecover">
 	update member set mem_ban = true where mem_num = #{param1}
 </update>
 <insert id="recoverLog">
 	insert into mem_state (pro_num, content, admin_num)values(#{param1}, "복구", #{param2});
 </insert>
 <select id="getIdx" resultType="int">	
 	select mem_num from member where mem_name = #{param1}
 </select>
 
 <select id="getNicknameToIdx" resultType="int">
 	select mem_num from member where mem_nickname = #{param1}
 </select> 
  <update id="reviseAuth">
 	update member set mem_autority = #{param2} where mem_nickname = #{param1}
 </update>
 
 <insert id="reviseLog">
 	insert into mem_state (pro_num, content, admin_num)values(#{param1}, #{param3}, #{param2});
 </insert>
 
 <select id="nickSearch" resultType="com.gudi.project.dto.DecListDTO">
 	select mem_num, mem_email, mem_name, mem_nickname, mem_autority, mem_ban from member where mem_nickname like #{param1} order by mem_num DESC limit 10 offset #{param2};
 </select>
 
  <select id="nickAuthSearch" resultType="com.gudi.project.dto.DecListDTO">
 	select mem_num, mem_email, mem_name, mem_nickname, mem_autority, mem_ban from member where mem_nickname like #{param1} and mem_autority = #{param2} order by mem_num DESC limit 10 offset #{param3};
 </select>
</mapper>